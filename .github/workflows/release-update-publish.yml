name: Build, Commit, Publish and Release on new Juno Release

on:
  repository_dispatch:
    types: [juno-release]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.78.0
          override: true
          components: rustfmt

      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

      - name: Set REPO_CONFIG from dispatch payload
        run: echo "REPO_CONFIG=${{ github.event.client_payload.repo_config }}" >> $GITHUB_ENV

      - name: Run proto build from Makefile
        run: make build-proto

      - name: Commit Generated Files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff-index --quiet HEAD --; then
            git commit -m "Generated files for release ${{ github.event.client_payload.release_tag }}"
            git push
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Generated files for release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish juno-std-derive
        run: cargo publish --manifest-path packages/juno-std-derive/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}

      - name: Publish juno-std
        run: cargo publish --manifest-path packages/juno-std/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
